openapi: 3.0.4
info:
  title: Taylor's Touch API
  version: 1.0.0
  description: API for managing users, clients, massages, and bookings

servers:
  - url: http://localhost:3000

paths:
  /:
    get:
      summary: Root check
      responses:
        '200':
          description: Root message
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: 'joesemail@email.com'
              password: 'thisisapassword'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '500':
          description: Server error registering user
  /users/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: 'joesemail@email.com'
              password: 'thisisapassword'
      responses:
        '200':
          description: User login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials
        '500':
          description: Server error logging in user
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error fetching users
  /users/{id}:
    get:
      summary: Get one user by unique ID
      parameters:
        - name: id
          in: path
          required: true
          description: The user ID
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Server error fetching user
    put:
      summary: Update an existing user
      parameters:
        - name: id
          in: path
          required: true
          description: The user ID to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - name
                - phone
                - email
              properties:
                user_id:
                  type: integer
                name:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                health_notes:
                  type: string
            example:
              user_1: 1
              name: 'Jane Bloggs'
              phone: '07465891326'
              email: 'janesemail@email.com'
              health_notes: 'in a car accident previously, suffered whiplash'
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '404':
          description: User not found
        '500':
          description: Server error updating user
    delete:
      summary: Delete an existing user
      parameters: 
        - name: id
          in: path
          required: true
          description: The user ID to delete
          schema:
            type: integer
      responses:
        '204':
          description: User successfully deleted
        '404':
          description: User not found
        '500':
          description: Server error deleting user
  /massages:
    get:
      summary: Get all massages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Massage'
        '500':
          description: Server error fetching massages
    post:
      summary: Create a new massage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: 
                - name
                - duration
                - price
              properties:
                name:
                  type: string
                duration:
                  type: number
                price:
                  type: number
            example:
              name: 'Chair Massage'
              duration: 30
              price: 45.00
      responses:
        '201':
          description: Massage created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Massage'
        '400':
          description: Invalid input
        '500':
          description: Server error creating massage
  /massages/{id}:
    get:
      summary: Get one massage by unique ID
      parameters:
        - name: id
          in: path
          required: true
          description: The massage ID
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Massage'
        '404':
          description: Massage not found
        '500':
          description: Server error fetching massage
    put:
      summary: Update an existing massage
      parameters:
        - name: id
          in: path
          required: true
          description: The massage ID to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: 
                - name
                - duration
                - price
              properties:
                name:
                  type: string
                duration:
                  type: number
                price:
                  type: number
            example:
              name: 'Chair Massage'
              duration: 60
              price: 80.00
      responses:
        '200':
          description: Massage successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Massage'
        '400':
          description: Invalid input
        '404':
          description: Massage not found
        '500':
          description: Server error updating massage
    delete:
      summary: Delete an existing massage
      parameters: 
        - name: id
          in: path
          required: true
          description: The massage ID to delete
          schema:
            type: integer
      responses:
        '204':
          description: Massage successfully deleted
        '404':
          description: Massage not found
        '500':
          description: Server error deleting massage
  /bookings:
    get:
      summary: Get all bookings
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '500':
          description: Server error fetching bookings
    post:
      summary: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - client_id
                - massage_id
                - booking_date
                - start_time
                - end_time
                - status
              properties:
                client_id:
                  type: integer
                massage_id:
                  type: integer
                booking_date:
                  type: string
                  format: date
                start_time:
                  type: string
                  format: time
                end_time:
                  type: string
                  format: time
                status:
                  type: string
                  enum: [scheduled, completed, cancelled]
                notes:
                  type: string
            example:
              client_id: 1
              massage_id: 1
              booking_date: '2026-04-20'
              start_time: '10:00'
              end_time: '10:30'
              status: 'scheduled'
              notes: 'may need a little extra attention on the neck area'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: Invalid input
        '500':
          description: Server error creating booking
  /bookings/{id}:
    get:
      summary: Get one booking by unique ID
      parameters:
        - name: id
          in: path
          required: true
          description: The booking ID
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Booking not found
        '500':
          description: Server error fetching booking
    put:
      summary: Update an existing booking
      parameters:
        - name: id
          in: path
          required: true
          description: The booking ID to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - client_id
                - massage_id
                - booking_date
                - start_time
                - end_time
                - status
              properties:
                client_id:
                  type: integer
                massage_id:
                  type: integer
                booking_date:
                  type: string
                  format: date
                start_time:
                  type: string
                  format: time
                end_time:
                  type: string
                  format: time
                status:
                  type: string
                  enum: [scheduled, completed, cancelled]
                notes:
                  type: string
            example:
              client_id: 1
              massage_id: 1
              booking_date: '2026-04-25'
              start_time: '13:00'
              end_time: '14:00'
              status: 'scheduled'
              notes: 'may need a little extra attention on the neck area'
      responses:
        '200':
          description: Booking successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: Invalid input
        '404':
          description: Booking not found
        '500':
          description: Server error updating booking
    delete:
      summary: Delete an existing booking
      parameters: 
        - name: id
          in: path
          required: true
          description: The booking ID to delete
          schema:
            type: integer
      responses:
        '204':
          description: Booking successfully deleted
        '404':
          description: Booking not found
        '500':
          description: Server error deleting booking
          
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        health_notes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Massage:
      type: object
      properties:
        massage_id:
          type: integer
        name:
          type: string
        duration:
          type: number
        price:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Booking:
      type: object
      properties:
        booking_id:
          type: integer
        user_id:
          type: integer
        massage_id:
          type: integer
        booking_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        status:
          type: string
          enum: [scheduled, completed, cancelled]
        notes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time